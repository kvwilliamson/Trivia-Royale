name: Build Windows Executable

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    tags:
      - 'v*'  # Run when a version tag is pushed

# Add permissions block at the top level
permissions:
  contents: write  # This gives write permission to repository contents, needed for creating releases

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Check for icon file
      id: check_icon
      run: |
        if (Test-Path "assets/icon.ico") {
          echo "icon_exists=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        } else {
          echo "icon_exists=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          echo "Icon file not found. Will build without custom icon."
        }
    
    - name: Build with PyInstaller (with icon)
      if: steps.check_icon.outputs.icon_exists == 'true'
      run: |
        pyinstaller --onefile --windowed --add-data "assets;assets" --icon="assets/icon.ico" --name="TriviaRoyale" --hidden-import=google.generativeai --hidden-import=mistralai --hidden-import=pyttsx3.drivers --hidden-import=pyttsx3.drivers.sapi5 TriviaRoyale.py
    
    - name: Build with PyInstaller (without icon)
      if: steps.check_icon.outputs.icon_exists != 'true'
      run: |
        pyinstaller --onefile --windowed --add-data "assets;assets" --name="TriviaRoyale" --hidden-import=google.generativeai --hidden-import=mistralai --hidden-import=pyttsx3.drivers --hidden-import=pyttsx3.drivers.sapi5 TriviaRoyale.py
    
    - name: Create version info
      run: |
        $version = if ($env:GITHUB_REF -match "refs/tags/v(.+)") { $matches[1] } else { "dev-$(Get-Date -Format 'yyyyMMdd')" }
        echo "Version: $version" > dist/version.txt
        echo "Build date: $(Get-Date -Format 'yyyy-MM-dd HH:mm')" >> dist/version.txt
        echo "Commit: $env:GITHUB_SHA" >> dist/version.txt
    
    - name: Create ZIP archive
      run: |
        $version = if ($env:GITHUB_REF -match "refs/tags/v(.+)") { $matches[1] } else { "dev-$(Get-Date -Format 'yyyyMMdd')" }
        $zipName = "TriviaRoyale-windows-$version.zip"
        Compress-Archive -Path dist/* -DestinationPath $zipName
    
    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: TriviaRoyale-Windows
        path: dist/TriviaRoyale.exe
    
    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v4
      with:
        name: TriviaRoyale-Windows-ZIP
        path: TriviaRoyale-windows-*.zip
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          TriviaRoyale-windows-*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
